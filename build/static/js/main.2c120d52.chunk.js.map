{"version":3,"sources":["services/categories.js","services/lists.js","components/ListContent.js","components/HomeCard.js","components/Navigation.js","components/AddDialog.js","components/BottomNav.js","components/Home.js","components/AllLists.js","components/Category.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","getCategories","axios","get","then","response","data","addCategory","newCategory","a","post","request","updateCategory","updatedCategory","id","put","deleteCategory","delete","getLists","addItem","newItem","updateItem","updatedItem","deleteItem","ListContent","props","List","undefined","lists","map","list","ListItem","key","divider","ListItemText","primary","content","useStyles","makeStyles","title","display","justifyContent","card","flexDirection","minHeight","maxHeight","margin","cardContent","flexGrow","overflow","cardActions","paddingLeft","HomeCard","useState","openMain","setOpenMain","openEdit","setOpenEdit","openWarning","setOpenWarning","category","editValue","setEditValue","classes","handleEditMenuOpen","handleEditMenuClose","handleEdit","event","preventDefault","categoryService","updatedCategories","categories","setCategories","handleDelete","confirm","filter","Promise","all","item","listService","Card","className","CardContent","Typography","variant","Button","onClick","Dialog","onClose","open","fullWidth","setting","button","handleListItemClick","autoComplete","onSubmit","DialogContent","TextField","autoFocus","value","onChange","target","label","type","DialogActions","color","DialogTitle","DialogContentText","CardActions","size","to","root","Navigation","matches","useMediaQuery","AppBar","position","Toolbar","toolBarContent","Tooltip","tooltip","IconButton","style","handleClick","AddDialog","handleClose","setOpen","handleAdd","handleValueChange","sticky","width","bottom","BottomNav","setValue","BottomNavigation","showLabels","newValue","BottomNavigationAction","icon","Home","handleOpen","Grid","container","spacing","xs","sm","lg","flex","listContent","selectMode","setSelectMode","index","setIndex","listResponse","updatedList","idx","setLists","deleteList","Category","categoryId","allLists","concat","AllLists","App","useEffect","initialCategories","initialLists","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2c120d52.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"/api/categories\";\n\nconst getCategories = () => {\n\tconst request = axios.get(`${baseUrl}`);\n\treturn request.then(response => response.data);\n};\n\nconst addCategory = async newCategory => {\n\tconst request = await axios.post(`${baseUrl}`, newCategory);\n\treturn request;\n};\n\nconst updateCategory = async (updatedCategory, id) => {\n\tconst request = await axios.put(`${baseUrl}/${id}`, updatedCategory);\n\treturn request;\n};\n\nconst deleteCategory = async id => {\n\tconst request = await axios.delete(`${baseUrl}/${id}`);\n\treturn request;\n};\nexport default {\n\tgetCategories,\n\taddCategory,\n\tupdateCategory,\n\tdeleteCategory,\n};\n","import axios from \"axios\";\nconst baseUrl = \"/api/lists\";\n\nconst getLists = () => {\n\tconst request = axios.get(`${baseUrl}`);\n\treturn request.then(response => response.data);\n};\n\nconst addItem = async newItem => {\n\tconst request = await axios.post(`${baseUrl}`, newItem);\n\treturn request;\n};\n\nconst updateItem = async (updatedItem, id) => {\n\tconst request = await axios.put(`${baseUrl}/${id}`, updatedItem);\n\treturn request;\n};\n\nconst deleteItem = async id => {\n\tconst request = await axios.delete(`${baseUrl}/${id}`);\n\treturn request;\n};\nexport default {\n\tgetLists,\n\taddItem,\n\tupdateItem,\n\tdeleteItem,\n};\n","import React from \"react\";\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\n\nconst ListContent = props => {\n\treturn (\n\t\t<List>\n\t\t\t{props.lists === undefined\n\t\t\t\t? \"\"\n\t\t\t\t: props.lists.map(list => (\n\t\t\t\t\t\t<ListItem key={list.id} divider={true}>\n\t\t\t\t\t\t\t<ListItemText primary={list.content} />\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t  ))}\n\t\t</List>\n\t);\n};\n\nexport default ListContent;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport categoryService from \"../services/categories\";\nimport listService from \"../services/lists\";\nimport ListContent from \"./ListContent\";\nimport {\n\tCard,\n\tCardActions,\n\tCardContent,\n\tTypography,\n\tButton,\n\tDialog,\n\tDialogContent,\n\tDialogContentText,\n\tDialogActions,\n\tDialogTitle,\n\tTextField,\n\tList,\n\tListItem,\n\tListItemText,\n\tmakeStyles,\n} from \"@material-ui/core\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\n\nconst useStyles = makeStyles({\n\ttitle: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"space-between\",\n\t},\n\n\tcard: {\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t\tminHeight: \"31vh\",\n\t\tmaxHeight: \"31vh\",\n\t\tmargin: \"1em 1em 1em 1em\",\n\t},\n\tcardContent: {\n\t\tflexGrow: \"1\",\n\t\toverflow: \"hidden\",\n\t},\n\n\tcardActions: {\n\t\tpaddingLeft: \"16px\",\n\t},\n});\n\nconst HomeCard = props => {\n\tconst [openMain, setOpenMain] = useState(false);\n\tconst [openEdit, setOpenEdit] = useState(false);\n\tconst [openWarning, setOpenWarning] = useState(false);\n\tconst [editValue, setEditValue] = useState(props.category.title);\n\tconst classes = useStyles();\n\tconst settings = [\"Edit Title\", \"Delete\"];\n\n\tconst handleClick = () => {\n\t\tsetOpenMain(true);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetOpenMain(false);\n\t};\n\n\tconst handleListItemClick = item => {\n\t\tswitch (item) {\n\t\t\tcase \"Edit Title\":\n\t\t\t\thandleEditMenuOpen();\n\t\t\t\tbreak;\n\t\t\tcase \"Delete\":\n\t\t\t\tsetOpenWarning(true);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsetOpenMain(false);\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tconst handleEditMenuOpen = () => {\n\t\t// Close the current dialog menu and open the edit dialog menu\n\t\tsetOpenMain(false);\n\t\tsetOpenEdit(true);\n\t};\n\n\tconst handleEditMenuClose = () => {\n\t\tsetOpenEdit(false);\n\t};\n\n\tconst handleEditValueChange = event => {\n\t\tsetEditValue(event.target.value);\n\t};\n\n\tconst handleEdit = async event => {\n\t\tevent.preventDefault();\n\n\t\tconst updatedCategory = {\n\t\t\ttitle: editValue,\n\t\t};\n\t\t// Update the title of the current list\n\t\tconst response = await categoryService.updateCategory(\n\t\t\tupdatedCategory,\n\t\t\tprops.category.id\n\t\t);\n\n\t\t// Repopulate the categories list but use the response from the PUT request to update the current category\n\t\tconst updatedCategories = props.categories.map(category =>\n\t\t\tcategory.id === props.category.id ? response.data : category\n\t\t);\n\n\t\tprops.setCategories(updatedCategories);\n\t\tsetEditValue(\"\");\n\t\tsetOpenEdit(false);\n\t};\n\n\tconst handleWarning = () => {\n\t\tsetOpenWarning(false);\n\t\thandleDelete(true);\n\t\tsetOpenMain(false);\n\t};\n\n\tconst handleDelete = confirm => {\n\t\tif (confirm) {\n\t\t\tconst updatedCategories = props.categories.filter(\n\t\t\t\tcategory => category.id !== props.category.id\n\t\t\t);\n\n\t\t\tprops.setCategories(updatedCategories);\n\t\t\tcategoryService.deleteCategory(props.category.id);\n\t\t\t//Possible problematic\n\t\t\tPromise.all(\n\t\t\t\tprops.category.lists.map(async item => {\n\t\t\t\t\tawait listService.deleteItem(item.id);\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t};\n\treturn (\n\t\t<Card className={classes.card}>\n\t\t\t<CardContent className={classes.cardContent}>\n\t\t\t\t<div className={classes.title}>\n\t\t\t\t\t<Typography variant=\"h5\">{props.category.title}</Typography>\n\t\t\t\t\t<Button onClick={handleClick}>\n\t\t\t\t\t\t<MoreHorizIcon />\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t<Dialog onClose={handleClose} open={openMain} fullWidth>\n\t\t\t\t\t<List>\n\t\t\t\t\t\t{settings.map(setting => (\n\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\t\tonClick={() => handleListItemClick(setting)}\n\t\t\t\t\t\t\t\tkey={setting}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ListItemText>{setting}</ListItemText>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</List>\n\t\t\t\t</Dialog>\n\n\t\t\t\t<Dialog onClose={handleEditMenuClose} open={openEdit} fullWidth>\n\t\t\t\t\t<form autoComplete=\"off\" onSubmit={handleEdit}>\n\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\tid=\"edit\"\n\t\t\t\t\t\t\t\tvalue={editValue}\n\t\t\t\t\t\t\t\tonChange={handleEditValueChange}\n\t\t\t\t\t\t\t\tlabel=\"Enter a new title\"\n\t\t\t\t\t\t\t\ttype=\"edit\"\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t<Button onClick={handleEditMenuClose} color=\"primary\">\n\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button color=\"primary\" type=\"submit\">\n\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t</form>\n\t\t\t\t</Dialog>\n\n\t\t\t\t<Dialog\n\t\t\t\t\tonClose={() => setOpenWarning(false)}\n\t\t\t\t\topen={openWarning}\n\t\t\t\t\tfullWidth\n\t\t\t\t>\n\t\t\t\t\t<DialogTitle>\n\t\t\t\t\t\tAre you sure you want to delete this category?\n\t\t\t\t\t</DialogTitle>\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<DialogContentText>\n\t\t\t\t\t\t\tDeleting this category will also delete all items as well. Once\n\t\t\t\t\t\t\tdeleted, you cannot reverse these changes.\n\t\t\t\t\t\t</DialogContentText>\n\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t<Button onClick={() => setOpenWarning(false)} color=\"primary\">\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button onClick={handleWarning} color=\"primary\">\n\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t</Dialog>\n\t\t\t\t<ListContent lists={props.category.lists} />\n\t\t\t</CardContent>\n\t\t\t<CardActions className={classes.cardActions}>\n\t\t\t\t<Button size=\"small\">\n\t\t\t\t\t<Link to={`/${props.category.title}`}>View More</Link>\n\t\t\t\t</Button>\n\t\t\t</CardActions>\n\t\t</Card>\n\t);\n};\n\nexport default HomeCard;\n","import React from \"react\";\nimport {\n\tAppBar,\n\tToolbar,\n\tIconButton,\n\tTooltip,\n\tmakeStyles,\n\tuseMediaQuery,\n} from \"@material-ui/core\";\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\nimport { flexbox } from \"@material-ui/system\";\n\nconst useStyles = makeStyles({\n\troot: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"space-between\",\n\t},\n});\n\nconst Navigation = props => {\n\tconst matches = useMediaQuery(\"(min-width:1024px)\");\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<AppBar position=\"sticky\">\n\t\t\t<Toolbar className={classes.root}>\n\t\t\t\t{props.toolBarContent}\n\t\t\t\t<Tooltip title={props.tooltip}>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\tstyle={{ display: matches ? \"\" : \"none\" }}\n\t\t\t\t\t\tonClick={props.handleClick}\n\t\t\t\t\t>\n\t\t\t\t\t\t<AddBoxIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Tooltip>\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t);\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport {\n\tTextField,\n\tDialog,\n\tDialogActions,\n\tDialogContent,\n\tDialogTitle,\n\tButton,\n} from \"@material-ui/core\";\n\nconst AddDialog = props => {\n\tconst handleClose = () => {\n\t\tprops.setOpen(false);\n\t};\n\n\treturn (\n\t\t<Dialog open={props.open} onClose={handleClose} fullWidth>\n\t\t\t<DialogTitle>{props.title}</DialogTitle>\n\t\t\t<form autoComplete=\"off\" onSubmit={props.handleAdd}>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\tvalue={props.value}\n\t\t\t\t\t\tonChange={props.handleValueChange}\n\t\t\t\t\t\tlabel={props.label}\n\t\t\t\t\t\ttype={props.type}\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t/>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<Button onClick={handleClose} color=\"primary\">\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button color=\"primary\" type=\"submit\">\n\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</DialogActions>\n\t\t\t\t</DialogContent>\n\t\t\t</form>\n\t\t</Dialog>\n\t);\n};\n\nexport default AddDialog;\n","import React, { useState } from \"react\";\nimport {\n\tBottomNavigation,\n\tBottomNavigationAction,\n\tuseMediaQuery,\n\tmakeStyles,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n\tsticky: {\n\t\twidth: \"100%\",\n\t\tposition: \"fixed\",\n\t\tbottom: 0,\n\t},\n});\n\nconst BottomNav = props => {\n\tconst [value, setValue] = useState(0);\n\tconst matches = useMediaQuery(\"(min-width:1024px)\");\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<BottomNavigation\n\t\t\tshowLabels\n\t\t\tstyle={{ display: matches ? \"none\" : \"\" }}\n\t\t\tvalue={value}\n\t\t\tonChange={(event, newValue) => {\n\t\t\t\tsetValue(newValue);\n\t\t\t}}\n\t\t\tclassName={classes.sticky}\n\t\t>\n\t\t\t<BottomNavigationAction\n\t\t\t\tonClick={props.handleClick}\n\t\t\t\tlabel={props.label}\n\t\t\t\ticon={props.icon}\n\t\t\t/>\n\t\t</BottomNavigation>\n\t);\n};\n\nexport default BottomNav;\n","import React, { useState } from \"react\";\nimport categoryService from \"../services/categories\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport HomeCard from \"./HomeCard\";\nimport Navigation from \"./Navigation\";\nimport AddDialog from \"./AddDialog\";\nimport BottomNav from \"./BottomNav\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst randomID = () => {\n\treturn (\n\t\t// https://gist.github.com/6174/6062387\n\t\tMath.random()\n\t\t\t.toString(36)\n\t\t\t.substring(2, 15) +\n\t\tMath.random()\n\t\t\t.toString(36)\n\t\t\t.substring(2, 15)\n\t);\n};\n\nconst Home = props => {\n\tconst [open, setOpen] = useState(false);\n\tconst [value, setValue] = useState(\"\");\n\tconst handleOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleValueChange = event => {\n\t\tsetValue(event.target.value);\n\t};\n\n\tconst handleAdd = async event => {\n\t\tevent.preventDefault();\n\n\t\t// Add new category to category array\n\t\tconst newCategory = {\n\t\t\ttitle: value,\n\t\t};\n\n\t\t// Send new category as obj for POST request\n\t\tconst response = await categoryService.addCategory(newCategory);\n\n\t\t// Update the existing array of categories\n\t\tconst updatedCategory = [...props.categories, response.data];\n\n\t\tprops.setCategories(updatedCategory);\n\t\tsetValue(\"\");\n\t\tsetOpen(false);\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<Navigation\n\t\t\t\thandleClick={handleOpen}\n\t\t\t\ttooltip=\"New Category\"\n\t\t\t\ttoolBarContent={<Typography variant=\"h6\">Track All</Typography>}\n\t\t\t/>\n\t\t\t<Grid container spacing={0}>\n\t\t\t\t{props.categories.map(category => (\n\t\t\t\t\t<Grid item xs={12} sm={6} lg={3} key={category.id}>\n\t\t\t\t\t\t<HomeCard\n\t\t\t\t\t\t\tsetCategories={props.setCategories}\n\t\t\t\t\t\t\tcategories={props.categories}\n\t\t\t\t\t\t\tcategory={category}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t))}\n\t\t\t</Grid>\n\n\t\t\t<AddDialog\n\t\t\t\topen={open}\n\t\t\t\tsetOpen={setOpen}\n\t\t\t\thandleAdd={handleAdd}\n\t\t\t\tvalue={value}\n\t\t\t\thandleValueChange={handleValueChange}\n\t\t\t\ttitle={\"New Category\"}\n\t\t\t\tlabel={\"Enter a title\"}\n\t\t\t\ttype={\"category\"}\n\t\t\t/>\n\n\t\t\t<BottomNav\n\t\t\t\thandleClick={handleOpen}\n\t\t\t\tlabel=\"New Category\"\n\t\t\t\ticon={<AddIcon />}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport listService from \"../services/lists\";\nimport categoryService from \"../services/categories\";\nimport {\n\tList,\n\tListItem,\n\tListItemText,\n\tIconButton,\n\tButton,\n\tDialog,\n\tDialogContent,\n\tDialogActions,\n\tTextField,\n\tmakeStyles,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles({\n\tflex: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"space-between\",\n\t},\n});\n\nconst ListContent = props => {\n\tconst listContent = props.lists.map(list => list.content);\n\tconst [selectMode, setSelectMode] = useState(\"\");\n\tconst [index, setIndex] = useState(null);\n\tconst [openEdit, setOpenEdit] = useState(false);\n\tconst [editValue, setEditValue] = useState(listContent);\n\tconst classes = useStyles();\n\tconst handleSelect = (id, idx) => {\n\t\tsetSelectMode(id);\n\t\tsetIndex(idx);\n\t};\n\n\tconst handleEditMenuOpen = () => {\n\t\tsetEditValue(props.lists[index].content);\n\t\tsetOpenEdit(true);\n\t};\n\tconst handleEditMenuClose = () => {\n\t\tsetOpenEdit(false);\n\t};\n\n\tconst handleEditValueChange = event => {\n\t\tsetEditValue(event.target.value);\n\t};\n\n\tconst handleEdit = async event => {\n\t\tevent.preventDefault();\n\t\tsetOpenEdit(false);\n\n\t\tconst updatedItem = {\n\t\t\tcontent: editValue,\n\t\t};\n\n\t\tconst listResponse = await listService.updateItem(\n\t\t\tupdatedItem,\n\t\t\tprops.lists[index].id\n\t\t);\n\n\t\t//Update the list item with the response data\n\t\tconst updatedList = props.lists.map((list, idx) =>\n\t\t\tidx === index ? listResponse.data : list\n\t\t);\n\n\t\t//Update the current category with the new list array\n\t\tconst updatedCategory = {\n\t\t\t...props.category,\n\t\t\tlists: updatedList,\n\t\t};\n\n\t\t//Update the entire categories array with the updated category\n\t\tconst updatedCategories = props.categories.map(category =>\n\t\t\tcategory.id === props.category.id ? updatedCategory : category\n\t\t);\n\n\t\tprops.setCategories(updatedCategories);\n\t\tprops.setLists(updatedList);\n\t\tcategoryService.updateCategory(updatedCategory, props.category.id);\n\t};\n\n\tconst handleDelete = () => {\n\t\t//Create a new list array without the deleted list item\n\t\tconst deleteList = props.lists.filter((list, idx) => idx !== index);\n\n\t\t//Update the current category with the new list array\n\t\tconst updatedCategory = {\n\t\t\t...props.category,\n\t\t\tlists: deleteList,\n\t\t};\n\n\t\t//Update the entire categories array with the updated category\n\t\tconst updatedCategories = props.categories.map(category =>\n\t\t\tcategory.id === props.category.id ? updatedCategory : category\n\t\t);\n\t\tprops.setCategories(updatedCategories);\n\t\tprops.setLists(deleteList);\n\t\tcategoryService.updateCategory(updatedCategory, props.category.id);\n\t\tlistService.deleteItem(selectMode);\n\t};\n\treturn (\n\t\t<List>\n\t\t\t{props.lists === undefined\n\t\t\t\t? \"\"\n\t\t\t\t: props.lists.map((list, index) => (\n\t\t\t\t\t\t<div key={list.id} className={classes.flex}>\n\t\t\t\t\t\t\t<ListItem divider={true}>\n\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\tonClick={() => handleSelect(list.id, index)}\n\t\t\t\t\t\t\t\t\tprimary={list.content}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tonClick={handleEditMenuOpen}\n\t\t\t\t\t\t\t\t\tstyle={{ display: list.id !== selectMode ? \"none\" : \"\" }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<EditIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tonClick={handleDelete}\n\t\t\t\t\t\t\t\t\tstyle={{ display: list.id !== selectMode ? \"none\" : \"\" }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t</div>\n\t\t\t\t  ))}\n\n\t\t\t<Dialog onClose={handleEditMenuClose} open={openEdit} fullWidth>\n\t\t\t\t<form autoComplete=\"off\" onSubmit={handleEdit}>\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\tid=\"edit\"\n\t\t\t\t\t\t\tvalue={editValue}\n\t\t\t\t\t\t\tonChange={handleEditValueChange}\n\t\t\t\t\t\t\tlabel=\"Edit your item\"\n\t\t\t\t\t\t\ttype=\"edit\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t<Button onClick={handleEditMenuClose} color=\"primary\">\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button color=\"primary\" type=\"submit\">\n\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t</form>\n\t\t\t</Dialog>\n\t\t</List>\n\t);\n};\n\nexport default ListContent;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport listService from \"../services/lists\";\nimport Navigation from \"./Navigation\";\nimport AddDialog from \"./AddDialog\";\nimport AllLists from \"./AllLists\";\nimport BottomNav from \"./BottomNav\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst randomID = () => {\n\treturn (\n\t\t// https://gist.github.com/6174/6062387\n\t\tMath.random()\n\t\t\t.toString(36)\n\t\t\t.substring(2, 15) +\n\t\tMath.random()\n\t\t\t.toString(36)\n\t\t\t.substring(2, 15)\n\t);\n};\n\nconst Category = props => {\n\tconst [open, setOpen] = useState(false);\n\tconst [value, setValue] = useState(\"\");\n\n\tconst handleOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleValueChange = event => {\n\t\tsetValue(event.target.value);\n\t};\n\n\tconst handleAdd = async event => {\n\t\tevent.preventDefault();\n\n\t\t// Create new item object\n\t\tconst newItem = {\n\t\t\tcategoryId: props.category.id,\n\t\t\tcontent: value,\n\t\t};\n\t\tconst response = await listService.addItem(newItem);\n\n\t\t// Update current list of items with new item\n\t\tconst updatedList = [...props.allLists, response.data];\n\t\tprops.setLists(updatedList);\n\n\t\t// Update the category's list array\n\t\tprops.category.lists = props.category.lists.concat(response.data);\n\n\t\tsetValue(\"\");\n\t\tsetOpen(false);\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<Navigation\n\t\t\t\ttooltip=\"New Item\"\n\t\t\t\thandleClick={handleOpen}\n\t\t\t\ttoolBarContent={\n\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t\t<ArrowBackIosIcon />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<Typography variant=\"h6\">{props.category.title}</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t}\n\t\t\t/>\n\n\t\t\t<AddDialog\n\t\t\t\topen={open}\n\t\t\t\tsetOpen={setOpen}\n\t\t\t\thandleAdd={handleAdd}\n\t\t\t\tvalue={value}\n\t\t\t\thandleValueChange={handleValueChange}\n\t\t\t\ttitle={\"New Item\"}\n\t\t\t\tlabel={\"Add a new item\"}\n\t\t\t\ttype={\"listItem\"}\n\t\t\t/>\n\t\t\t<AllLists\n\t\t\t\tsetLists={props.setLists}\n\t\t\t\tlists={props.category.lists}\n\t\t\t\tcategory={props.category}\n\t\t\t\tcategories={props.categories}\n\t\t\t\tsetCategories={props.setCategories}\n\t\t\t/>\n\t\t\t<BottomNav\n\t\t\t\thandleClick={handleOpen}\n\t\t\t\tlabel={\"New Item\"}\n\t\t\t\ticon={<AddIcon />}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default Category;\n","import React, { useState, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport categoryService from \"./services/categories\";\nimport listService from \"./services/lists\";\nimport Home from \"./components/Home\";\nimport Category from \"./components/Category\";\n\nconst App = () => {\n\tconst [categories, setCategories] = useState([]);\n\tconst [lists, setLists] = useState([]);\n\n\tuseEffect(() => {\n\t\t//Get all the categories in the db\n\t\tcategoryService.getCategories().then(initialCategories => {\n\t\t\tsetCategories(initialCategories);\n\t\t});\n\n\t\tlistService.getLists().then(initialLists => {\n\t\t\tsetLists(initialLists);\n\t\t});\n\t}, []);\n\treturn (\n\t\t<div>\n\t\t\t<Switch>\n\t\t\t\t{categories.map(category => (\n\t\t\t\t\t<Route key={category.id} path={`/${category.title}`}>\n\t\t\t\t\t\t<Category\n\t\t\t\t\t\t\tsetCategories={setCategories}\n\t\t\t\t\t\t\tcategories={categories}\n\t\t\t\t\t\t\tcategory={category}\n\t\t\t\t\t\t\tsetLists={setLists}\n\t\t\t\t\t\t\tallLists={lists}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Route>\n\t\t\t\t))}\n\n\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t<Home setCategories={setCategories} categories={categories} />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}